% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/XPSFitCompClass.r
\docType{class}
\name{fitComponents-class}
\alias{fitComponents-class}
\alias{setParam}
\alias{setParam,fitComponents-method}
\alias{getParam}
\alias{getParam,fitComponents-method}
\alias{Ycomponent}
\alias{Ycomponent,fitComponents-method}
\alias{ComponentWidth}
\alias{ComponentWidth,XPSCoreLine-method}
\title{Class "fitComponents"}
\usage{
setParam(object, parameter = NULL, variable = NULL, value = NULL)

\S4method{setParam}{fitComponents}(object, parameter = NULL, variable = NULL, value = NULL)

getParam(object, parameter = NULL, variable = NULL)

\S4method{getParam}{fitComponents}(object, parameter = NULL, variable = NULL)

Ycomponent(object, x, y)

\S4method{Ycomponent}{fitComponents}(object, x, y)

ComponentWidth(object, idx)

\S4method{ComponentWidth}{XPSCoreLine}(object, idx)
}
\arguments{
\item{object}{an object of class \code{XPSCoreLine}}

\item{parameter}{character is one of the "start", "max" or "min" parameter to be set}

\item{variable}{character as "mu", "sigma"... indicates the parameter to set}

\item{value}{numeric the value to set}

\item{x}{numeric vector of the type CL@RegionToFit$x where
CL is of class 'XPSCoreLine'}

\item{y}{numeric vector of the type CL@Baseline$y where
CL is of class 'XPSCoreLine'}

\item{idx}{numeric is the index of the fitting component}
}
\value{
'setParam' returns the object withthe parameter set

'setParam' returns the object withthe parameter set

'getParam' returns the value of the requested parameter

'getParam' returns the value of the requested parameter

'Ycomponent' returns Baseline subtracted vales of the fit component

'Ycomponent' returns Baseline subtracted vales of the fit component

'ComponentWidth' returns the FWHM of the fit component

'ComponentWidth' returns the FWHM of the fit component
}
\description{
a class that describes a fit component.  The class has the
  definition of all the necessary informations needed to use a fit component
  algorithm store all the related infromation, enable specific plot functionalities
  Objects from the Class: Objects can be created by calls of the form
  \code{new("fitComponents", ...)}.

S4method 'setParam' method for setting fitting parameters.

method to set fitting parameters of a object@Component[[j]]
   where object is of class 'XPSCoreLine' and j indicates the jth fit component

S4method 'getParam' method for get information about a fitting parameters.

method to get the value of the specified fitting parameter from an object@Component[[j]]
   where object is of class 'XPSCoreLine' and j indicates the jth fit component

S4method 'Ycomponent' method for generate the Y values of the
  fit component using the chosen fitting function and the associated fit parameters

S4method 'Ycomponent' method for generate the Y values of the
  fit component using the chosen fitting function and the associated fit parameters

'ComponentWidth' computes the FWHM of 'mixed' fit components
  such as "GaussLorentzProd", "GaussLorentzSum", "AsymmGauss", "AsymmLorentz"
  "AsymmVoigt", "AsymmGaussLorentz", "AsymmGaussVoigt", "AsymmGaussLorentzProd" ||
  "DoniachSunjicGauss", "DoniachSunjicGaussTail"

'ComponentWidth' computes the FWHM of 'mixed' fit components
  such as "GaussLorentzProd", "GaussLorentzSum", "AsymmGauss", "AsymmLorentz"
  "AsymmVoigt", "AsymmGaussLorentz", "AsymmGaussVoigt", "AsymmGaussLorentzProd" ||
  "DoniachSunjicGauss", "DoniachSunjicGaussTail"
}
\section{Slots}{

\describe{
\item{\code{funcName}}{the name of the fitting function}

\item{\code{description}}{the description of the fitting function}

\item{\code{label}}{label of the fit component associated to the added fit component}

\item{\code{param}}{the list of fitting parameters}

\item{\code{rsf}}{the RSF associated to the fit component (the same as that of the Core-Line)}

\item{\code{ycoor}}{the y values of the best fit}

\item{\code{link}}{the list containing the series of links associated to this fit component}
}}

\examples{
\dontrun{
 showClass("fitComponents")
}
\dontrun{
 setParam(test[["C1s"]]@Component[[2]], parameter="start", variable="mu", value="285")
}
\dontrun{
  getParam(test[["C1s"]]@Component[[2]], parameter="start", variable="mu")
}
\dontrun{
  Ycomponent(test[["C1s"]]@Component[[2]],test[["C1s"]]@RegionToFit$x, test[["C1s"]]@Baseline$y)
}
\dontrun{
  ComponentWidth(test[["C1s"]], idx=2)
}
}
